on:
  workflow_call:
    inputs:
      USE_PYLINT:
        required: false
        type: boolean
        default: false
      USE_RUFF:
        required: false
        type: boolean
        default: false
      EXECUTE_TESTS:
        required: false
        type: boolean
        default: false
      EXECUTE_COVERAGE_TEST:
        required: false
        type: boolean
        default: false
      BUILD_PACKAGE:
        required: false
        type: boolean
        default: false
      GENERATE_DOCUMENTATION:
        required: false
        type: boolean
        default: false
      USE_SEMANTIC_RELEASE:
        required: false
        type: boolean
        default: false
      GH_PAGES:
        required: false
        type: boolean
        default: false


      PYTHON_VERSION:
        required: true
        type: string
        default: "3.10"
      PYTHON_PACKAGE_NAME:
        required: false
        type: string
        default: ""
      USE_UV:
        required: false
        type: boolean
        default: false
      INSTALL_REQUIREMENTS:
        required: false
        type: boolean
        default: true
      EXTRA_REQUIREMENTS:
        required: false
        type: string
        default: ""

      TEST_ENGINE:
        required: false
        type: string
        default: "PYTEST"
      TEST_PATH:
        required: false
        type: string
        default: "tests"
      COVERAGE_TYPE:
        required: false
        type: string
        default: "default"

      DIRECTORY:
        required: false
        type: string
        default: "."
      COMMIT_SUBJECT:
        required: false
        type: string
        default: "chore(release): version {version}"

      GH_PAGES_BRANCH:
        required: false
        type: string
        default: "gh-pages"
      GH_PAGES_DIR:
        required: false
        type: string
        default: "/tmp/gh-pages"
      DOCS_PATH:
        required: false
        type: string
        default: "docs"
      CREATE_PAGES_ON_FAILURE:
        required: false
        type: boolean
        default: false
    secrets:
      TOKEN:
        required: false

jobs:
  build:
    if: ${{inputs.BUILD_PACKAGE}}
    uses: RWTH-EBC/ci_templates/.github/workflows/build.yml@main
    with:
      PYTHON_VERSION: ${{inputs.PYTHON_VERSION}}
      USE_UV: ${{inputs.USE_UV}}
      INSTALL_REQUIREMENTS: ${{inputs.INSTALL_REQUIREMENTS}}
      EXTRA_REQUIREMENTS: ${{inputs.EXTRA_REQUIREMENTS}}
      PYTHON_PACKAGE_NAME: ${{inputs.PYTHON_PACKAGE_NAME}}

  pylint:
    if: ${{inputs.USE_PYLINT}}
    uses: RWTH-EBC/ci_templates/.github/workflows/pylint.yml@main
    with:
      PYTHON_VERSION: ${{inputs.PYTHON_VERSION}}
      PYTHON_PACKAGE_NAME: ${{inputs.PYTHON_PACKAGE_NAME}}

  tests:
    if: ${{inputs.EXECUTE_TESTS}}
    uses: RWTH-EBC/ci_templates/.github/workflows/tests.yml@main
    with:
      USE_UV: ${{inputs.USE_UV}}
      INSTALL_REQUIREMENTS: ${{inputs.INSTALL_REQUIREMENTS}}
      EXTRA_REQUIREMENTS: ${{inputs.EXTRA_REQUIREMENTS}}
      TEST_ENGINE: ${{inputs.TEST_ENGINE}}
      TEST_PATH: ${{inputs.TEST_PATH}}

  coverage_test:
    if: ${{inputs.EXECUTE_COVERAGE_TEST}}
    uses: RWTH-EBC/ci_templates/.github/workflows/test-coverage.yml@main
    with:
      PYTHON_VERSION: ${{inputs.PYTHON_VERSION}}
      USE_UV: ${{inputs.USE_UV}}
      INSTALL_REQUIREMENTS: ${{inputs.INSTALL_REQUIREMENTS}}
      EXTRA_REQUIREMENTS: ${{inputs.EXTRA_REQUIREMENTS}}
      PYTHON_PACKAGE_NAME: ${{inputs.PYTHON_PACKAGE_NAME}}
      TEST_ENGINE: ${{inputs.TEST_ENGINE}}
      TEST_PATH: ${{inputs.TEST_PATH}}
      COVERAGE_TYPE: ${{inputs.COVERAGE_TYPE}}

  ruff:
    if: ${{inputs.USE_RUFF}}
    uses: RWTH-EBC/ci_templates/.github/workflows/ruff.yml@main
    with:
      PYTHON_VERSION: ${{inputs.PYTHON_VERSION}}
      PYTHON_PACKAGE_NAME: ${{inputs.PYTHON_PACKAGE_NAME}}

  sphinx_doc:
    if: ${{inputs.GENERATE_DOCUMENTATION}}
    uses: RWTH-EBC/ci_templates/.github/workflows/sphinx_doc.yml@main
    with:
      PYTHON_VERSION: ${{inputs.PYTHON_VERSION}}
      USE_UV: ${{inputs.USE_UV}}
      INSTALL_REQUIREMENTS: ${{inputs.INSTALL_REQUIREMENTS}}
      EXTRA_REQUIREMENTS: ${{inputs.EXTRA_REQUIREMENTS}}
      PYTHON_PACKAGE_NAME: ${{inputs.PYTHON_PACKAGE_NAME}}

  semantic_release:
    if: ${{inputs.USE_SEMANTIC_RELEASE}}
    uses: RWTH-EBC/ci_templates/.github/workflows/semantic-release.yml@main
    with:
      PYTHON_VERSION: ${{inputs.PYTHON_VERSION}}
      DIRECTORY: ${{inputs.DIRECTORY}}
      COMMIT_SUBJECT: ${{inputs.COMMIT_SUBJECT}}
    secrets:
      TOKEN: ${{ secrets.TOKEN }}

  wait_for_all:
    name: Wait for all active jobs
    if: always()
    runs-on: ubuntu-latest
    needs:
      - build
      - pylint
      - tests
      - ruff
      - sphinx_doc
      - semantic_release
    steps:
      - run: echo "All active jobs done"

  gh_pages:
    if: ${{inputs.GH_PAGES}}
    needs:
      - wait_for_all
    uses: RWTH-EBC/ci_templates/.github/workflows/github_pages.yml@main
    with:
      GH_PAGES_BRANCH: ${{inputs.GH_PAGES_BRANCH}}
      GH_PAGES_DIR: ${{inputs.GH_PAGES_DIR}}
      DOCS_PATH: ${{inputs.DOCS_PATH}}
      CREATE_PAGES_ON_FAILURE: ${{inputs.CREATE_PAGES_ON_FAILURE}}
    secrets:
      TOKEN: ${{ secrets.TOKEN }}
