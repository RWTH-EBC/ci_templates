name: Coverage Tests

on:
  workflow_call:
    inputs:
      PYTHON_VERSION:
        required: true
        type: string
        default: "3.10"
      TEST_ENGINE:
        required: false
        type: string
        default: "PYTEST"
      TEST_PATH:
        required: false
        type: string
        default: "tests"
      COVERAGE_TYPE:
        required: false
        type: string
        default: "default"
      EXTRA_REQUIREMENTS:
        required: false
        type: string
        default: ""
      INSTALL_REQUIREMENTS:
        required: false
        type: boolean
        default: true
      USE_UV:
        required: false
        type: boolean
        default: false
      PYTHON_PACKAGE_NAME:
        required: false
        type: string
        default: ""

jobs:
  coverage:
    if: ${{ inputs.COVERAGE_TYPE != 'Dymola' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.PYTHON_VERSION }}

      - name: Install Project and Requirements
        uses: RWTH-EBC/ci_templates/.github/actions/install@main
        with:
          use-uv: ${{ inputs.USE_UV }}
          install-requirements: ${{ inputs.INSTALL_REQUIREMENTS }}
          extra-requirements: ${{ inputs.EXTRA_REQUIREMENTS }}

      - name: Install test dependencies
        run: |
          pip install "coverage<7.5.0" "coverage-badge<=1.1.0" pytest

      - name: Run tests with coverage
        run: |
          if [ "${{ inputs.TEST_ENGINE }}" == "PYTEST" ]; then
            coverage run -m pytest ${{ inputs.TEST_PATH }}/
          else
            coverage run -m unittest discover --verbose ${{ inputs.TEST_PATH }}/ "test_*.py"
          fi

      - name: Generate coverage report and badge
        run: |
          mkdir -p coverage
          coverage html -d coverage
          coverage-badge -o coverage/badge.svg

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage
          retention-days: 1

  dymola_coverage:
     # NEEDS A SELF HOSTED RUNNER WITH TAG
    if: ${{ inputs.COVERAGE_TYPE == 'Dymola' }}
    runs-on: [self-hosted] # <- RUNNER TAG GOES IN HERE
    container:
      # IMAGE NEEDED ON GITHUB
      image: registry.git.rwth-aachen.de/ebc/ebc_intern/dymola-docker:Dymola2024xRefresh1-miniconda
      options: --user root

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Start Xvfb and set up Conda
        run: |
          Xvfb :77 -extension RANDR -extension GLX &
          export DISPLAY=:77.0
          PY_VER=$(echo "${{ inputs.PYTHON_VERSION }}" | grep -oE '[0-9]+\.[0-9]+')
          conda create -n pyCITest python=$PY_VER -y
          echo "source activate pyCITest" >> $GITHUB_ENV

      - name: Install Project and Requirements
        uses: RWTH-EBC/ci_templates/.github/actions/install@main
        with:
          use-uv: ${{ inputs.USE_UV }}
          install-requirements: ${{ inputs.INSTALL_REQUIREMENTS }}
          extra-requirements: ${{ inputs.EXTRA_REQUIREMENTS }}

      - name: Install test dependencies
        run: |
          pip install "coverage<7.5.0" "coverage-badge<=1.1.0" pytest

      - name: Run tests with coverage
        run: |
          if [ "${{ inputs.TEST_ENGINE }}" == "PYTEST" ]; then
            coverage run -m pytest ${{ inputs.TEST_PATH }}/
          else
            coverage run -m unittest discover --verbose ${{ inputs.TEST_PATH }}/ "test_*.py"
          fi

      - name: Generate coverage report and badge
        run: |
          mkdir -p coverage
          coverage html -d coverage
          coverage-badge -o coverage/badge.svg

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage
          retention-days: 1