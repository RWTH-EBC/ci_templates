name: Coverage Tests

on:
  workflow_call:
    inputs:
      PYTHON_VERSION:
        required: true
        type: string
        default: "3.10"
      TEST_ENGINE:
        required: false
        type: string
        default: "PYTEST"
      TEST_PATH:
        required: false
        type: string
        default: "tests"
      COVERAGE_TYPE:
        required: false
        type: string
        default: "default"
      EXTRA_REQUIREMENTS:
        required: false
        type: string
        default: ""
      INSTALL_REQUIREMENTS:
        required: false
        type: boolean
        default: true
      USE_UV:
        required: false
        type: boolean
        default: false
      PYTHON_PACKAGE_NAME:
        required: false
        type: string
        default: ""
      USE_DYMOLA:
        required: false
        type: boolean
        default: false

jobs:
  coverage:
    if: ${{ !inputs.USE_DYMOLA }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.PYTHON_VERSION }}

      - name: Install Project and Requirements
        uses: RWTH-EBC/ci_templates/.github/actions/install@main
        with:
          use-uv: ${{ inputs.USE_UV }}
          install-requirements: ${{ inputs.INSTALL_REQUIREMENTS }}
          extra-requirements: ${{ inputs.EXTRA_REQUIREMENTS }}

      - name: Install test dependencies
        run: |
          pip install "coverage<7.5.0" "coverage-badge<=1.1.0" pytest setuptools

      - name: Run tests with coverage
        run: |
          if [ "${{ inputs.TEST_ENGINE }}" == "PYTEST" ]; then
            coverage run -m pytest ${{ inputs.TEST_PATH }}/
          else
            coverage run -m unittest discover --verbose ${{ inputs.TEST_PATH }}/ "test_*.py"
          fi

      - name: Generate coverage report and badge
        run: |
          mkdir -p coverage
          coverage html -d coverage
          coverage-badge -o coverage/badge.svg

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage
          retention-days: 1

  dymola_coverage:
    if: ${{ inputs.USE_DYMOLA }}
    runs-on: [dymola]
    container:
      image: localhost:5000/dymola-extended:latest
      options: --user root

    steps:
      - name: Verify container environment
        run: |
          echo "=== Container Environment Verification ==="
          echo "Node.js Version: $(node --version 2>/dev/null || echo 'Not found')"
          echo "NPM Version: $(npm --version 2>/dev/null || echo 'Not found')"
          echo "Git Version: $(git --version 2>/dev/null || echo 'Not found')"
          echo "Python Version: $(python --version 2>/dev/null || echo 'Not found')"
          echo "Conda Version: $(conda --version 2>/dev/null || echo 'Not found')"
          
          echo "GitHub Actions Node paths:"
          ls -la /__e/ 2>/dev/null || echo "No /__e/ directory found"
          
          echo ""
          echo "Current working directory: $(pwd)"
          echo "Current user: $(whoami)"
          echo "========================================="

      - name: Checkout
        uses: actions/checkout@v5

      - name: Start Xvfb and setup display
        run: |
          echo "Starting Xvfb for headless operation..."
          Xvfb :77 -extension RANDR -extension GLX &
          export DISPLAY=:77.0
          echo "DISPLAY=:77.0" >> $GITHUB_ENV

      - name: Setup Conda environment
        run: |
          echo "Setting up Python environment with Conda..."
          source /opt/conda/etc/profile.d/conda.sh || echo "Warning: Conda profile not found"
          
          PY_VER=$(echo "${{ inputs.PYTHON_VERSION }}" | grep -oE '[0-9]+\.[0-9]+')
          echo "Creating Conda environment with Python $PY_VER"
          
          conda create -n pyCITest python=$PY_VER -y
          conda activate pyCITest
          
          echo "Python environment ready:"
          python --version
          which python

      - name: Install Project and Requirements
        uses: RWTH-EBC/ci_templates/.github/actions/install@main
        with:
          use-uv: ${{ inputs.USE_UV }}
          install-requirements: ${{ inputs.INSTALL_REQUIREMENTS }}
          extra-requirements: ${{ inputs.EXTRA_REQUIREMENTS }}

      - name: Install test dependencies
        run: |
          source /opt/conda/etc/profile.d/conda.sh
          conda activate pyCITest
          pip install "coverage<7.5.0" "coverage-badge<=1.1.0" pytest

      - name: Run tests with coverage
        run: |
          source /opt/conda/etc/profile.d/conda.sh
          conda activate pyCITest
          export DISPLAY=:77.0
          
          if [ "${{ inputs.TEST_ENGINE }}" == "PYTEST" ]; then
            echo "Running pytest with coverage..."
            coverage run -m pytest ${{ inputs.TEST_PATH }}/
          else
            echo "Running unittest with coverage..."
            coverage run -m unittest discover --verbose ${{ inputs.TEST_PATH }}/ "test_*.py"
          fi

      - name: Generate coverage report and badge
        run: |
          source /opt/conda/etc/profile.d/conda.sh
          conda activate pyCITest
          
          echo "Generating coverage reports..."
          mkdir -p coverage
          coverage html -d coverage
          coverage-badge -o coverage/badge.svg
          
          echo "Coverage report generated successfully"
          ls -la coverage/

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage
          retention-days: 1