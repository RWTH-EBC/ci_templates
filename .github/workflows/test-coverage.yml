name: Coverage Tests

on:
  workflow_call:
    inputs:
      PYTHON_VERSION:
        required: true
        type: string
        default: "3.10"
      TEST_ENGINE:
        required: false
        type: string
        default: "PYTEST"
      TEST_PATH:
        required: false
        type: string
        default: "tests"
      COVERAGE_TYPE:
        required: false
        type: string
        default: "default"
      EXTRA_REQUIREMENTS:
        required: false
        type: string
        default: ""
      INSTALL_REQUIREMENTS:
        required: false
        type: boolean
        default: true
      USE_UV:
        required: false
        type: boolean
        default: false
      PYTHON_PACKAGE_NAME:
        required: false
        type: string
        default: ""
      USE_DYMOLA:
        required: false
        type: boolean
        default: false

jobs:
  coverage:
    if: ${{ !inputs.USE_DYMOLA }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.PYTHON_VERSION }}

      - name: Install Project and Requirements
        uses: RWTH-EBC/ci_templates/.github/actions/install@main
        with:
          use-uv: ${{ inputs.USE_UV }}
          install-requirements: ${{ inputs.INSTALL_REQUIREMENTS }}
          extra-requirements: ${{ inputs.EXTRA_REQUIREMENTS }}

      - name: Install test dependencies
        run: |
          pip install "coverage<7.5.0" "coverage-badge<=1.1.0" pytest setuptools

      - name: Run tests with coverage
        run: |
          if [ "${{ inputs.TEST_ENGINE }}" == "PYTEST" ]; then
            coverage run -m pytest ${{ inputs.TEST_PATH }}/
          else
            coverage run -m unittest discover --verbose ${{ inputs.TEST_PATH }}/ "test_*.py"
          fi

      - name: Generate coverage report and badge
        run: |
          mkdir -p coverage
          coverage html -d coverage
          coverage-badge -o coverage/badge.svg

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage
          retention-days: 1

  dymola_coverage:
    if: ${{ inputs.USE_DYMOLA }}
    runs-on: [dymola]
    container:
      image: localhost:5000/dymola-extended:latest
      options: >-
        --user root
        --workdir /github/workspace
        --env HOME=/root
        --env GITHUB_WORKSPACE=/github/workspace
        --env GITHUB_REPOSITORY_OWNER
        --env GITHUB_REPOSITORY
        --env GITHUB_RUN_ID
        --env GITHUB_RUN_NUMBER
        --env GITHUB_RETENTION_DAYS
        --env GITHUB_RUN_ATTEMPT
        --env GITHUB_REF_NAME
        --env GITHUB_REF
        --env GITHUB_SHA
        --env GITHUB_ACTOR
        --env GITHUB_TRIGGERING_ACTOR
        --env GITHUB_WORKFLOW
        --env GITHUB_HEAD_REF
        --env GITHUB_BASE_REF
        --env GITHUB_EVENT_NAME
        --env GITHUB_SERVER_URL
        --env GITHUB_API_URL
        --env GITHUB_GRAPHQL_URL
        --env GITHUB_REF_TYPE
        --env GITHUB_JOB
        --env GITHUB_ACTION
        --env GITHUB_ACTION_REPOSITORY
        --env GITHUB_ACTION_REF
        --env GITHUB_PATH
        --env GITHUB_ENV
        --env GITHUB_STEP_SUMMARY
        --env GITHUB_STATE
        --env GITHUB_OUTPUT
      volumes:
        - /github/workspace:/github/workspace
        - /github/home:/github/home
        - /github/workflow:/github/workflow

    steps:
      - name: Verify container startup
        run: |
          echo "Container started successfully"
          echo "Working directory: $(pwd)"
          echo "User: $(whoami)"
          echo "Node.js: $(node --version || echo 'Not found')"

      - name: Checkout
        uses: actions/checkout@v5

      - name: Start Xvfb
        run: |
          Xvfb :77 -extension RANDR -extension GLX &
          export DISPLAY=:77.0
          echo "DISPLAY=:77.0" >> $GITHUB_ENV

      - name: Setup Conda environment
        run: |
          source /opt/conda/etc/profile.d/conda.sh
          PY_VER=$(echo "${{ inputs.PYTHON_VERSION }}" | grep -oE '[0-9]+\.[0-9]+')
          conda create -n pyCITest python=$PY_VER -y
          conda activate pyCITest
          echo "conda activate pyCITest" >> $GITHUB_ENV

      - name: Install Project and Requirements
        run: |
          source /opt/conda/etc/profile.d/conda.sh
          conda activate pyCITest
        env:
          USE_UV: ${{ inputs.USE_UV }}
          INSTALL_REQUIREMENTS: ${{ inputs.INSTALL_REQUIREMENTS }}
          EXTRA_REQUIREMENTS: ${{ inputs.EXTRA_REQUIREMENTS }}

      - name: Install dependencies manually
        run: |
          source /opt/conda/etc/profile.d/conda.sh
          conda activate pyCITest
          
          # Install requirements if file exists
          if [ "${{ inputs.INSTALL_REQUIREMENTS }}" = "true" ] && [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi
          
          # Install local package if setup files exist
          if [ -f setup.py ] || [ -f pyproject.toml ]; then
            pip install -e .${{ inputs.EXTRA_REQUIREMENTS }}
          fi

      - name: Install test dependencies
        run: |
          source /opt/conda/etc/profile.d/conda.sh
          conda activate pyCITest
          pip install "coverage<7.5.0" "coverage-badge<=1.1.0" pytest

      - name: Run tests with coverage
        run: |
          source /opt/conda/etc/profile.d/conda.sh
          conda activate pyCITest
          export DISPLAY=:77.0
          
          if [ "${{ inputs.TEST_ENGINE }}" == "PYTEST" ]; then
            coverage run -m pytest ${{ inputs.TEST_PATH }}/
          else
            coverage run -m unittest discover --verbose ${{ inputs.TEST_PATH }}/ "test_*.py"
          fi

      - name: Generate coverage report
        run: |
          source /opt/conda/etc/profile.d/conda.sh
          conda activate pyCITest
          mkdir -p coverage
          coverage html -d coverage
          coverage-badge -o coverage/badge.svg

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage
          retention-days: 1