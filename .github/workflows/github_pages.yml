# .github/workflows/deploy-gh-pages.yml
name: Deploy GitHub Pages

on:
  workflow_call:
    inputs:
      GH_PAGES_BRANCH:
        required: false
        type: string
        default: "gh-pages"
      GH_PAGES_DIR:
        required: false
        type: string
        default: "/tmp/gh-pages"
      DOCS_PATH:
        required: false
        type: string
        default: "docs"
      CREATE_PAGES_ON_FAILURE:
        required: false
        type: boolean
        default: false
    secrets:
      DEPLOY_TOKEN:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    if: ${{ inputs.CREATE_PAGES_ON_FAILURE || success() }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.DEPLOY_TOKEN }}
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git config --global user.name "${{ github.actor }}"

      - name: Set Git remote to use token
        env:
          GH_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
        run: git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }}.git


      - name: TESTING AUTH
        env:
          GH_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
        run: |
          REPO_URL="https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }}.git"
          git ls-remote "$REPO_URL"
          mkdir ./test
#          echo git config --get --global --unset credential.helper || true
          git clone "$REPO_URL" ./test


      - name: Setup gh-pages branch
        id: setup
        env:
          GH_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
        run: |
          GH_PAGES_BRANCH="${{ inputs.GH_PAGES_BRANCH}}"
          GH_PAGES_DIR="${{ inputs.GH_PAGES_DIR}}"
          REPO_URL="https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }}.git"
          
          echo $REPO_URL
          
          if git ls-remote --exit-code --heads $REPO_URL $GH_PAGES_BRANCH; then
            git clone --branch $GH_PAGES_BRANCH $REPO_URL $GH_PAGES_DIR
            cd $GH_PAGES_DIR/docs || mkdir -p $GH_PAGES_DIR/docs
            git rm -r "${GITHUB_REF_NAME}" || true
          else
            mkdir -p $GH_PAGES_DIR/docs
            cd $GH_PAGES_DIR
            git init
            git remote add origin "$REPO_URL"
            echo $(git remote get-url origin)
            echo $(git remote -v)
            git fetch origin
            git checkout -b $GH_PAGES_BRANCH
            cd docs
            echo "<meta http-equiv=\"refresh\" content=\"0; url=https://${{ github.repository_owner }}.github.io/${{ github.repository }}/main/docs/index.html\">" > index.html
            touch .nojekyll
          fi

      - name: Copy docs folder
        run: |
          GH_PAGES_DIR="${{ inputs.GH_PAGES_DIR}}"
          cp -r ${{ inputs.DOCS_PATH }} "${GH_PAGES_DIR}/${GITHUB_REF_NAME}/"

      - name: Delete folders older than 14 days
        run: |
          GH_PAGES_DIR=${{ steps.setup.outputs.GH_PAGES_DIR }}
          cd $GH_PAGES_DIR/docs

          remote_branches=$(git for-each-ref --format='%(refname:lstrip=3)' refs/remotes/origin)

          for folder in */; do
            folder=${folder%/}
            if [[ "$folder" == "development" || "$folder" == "main" || "$folder" == "master" ]]; then
              echo "Skipping folder $folder (protected branch)"
              continue
            fi
            if echo "$remote_branches" | grep -q "^$folder$"; then
              last_commit_date=$(git log -1 --format="%ci" "origin/$folder")
              last_commit_ts=$(date -d "$last_commit_date" +%s)
              current_ts=$(date +%s)
              days_diff=$(( (current_ts - last_commit_ts) / 86400 ))
              if (( days_diff >= 180 )); then
                echo "Deleting folder $folder (no commits in $days_diff days)"
                rm -rf "$folder"
              else
                echo "Keeping folder $folder (commits within $days_diff days)"
              fi
            else
              echo "Folder $folder not associated with remote branch, skipping deletion"
            fi
          done

      - name: Commit and push changes
        run: |
          GH_PAGES_DIR="${{ inputs.GH_PAGES_DIR}}"
          cd $GH_PAGES_DIR
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update docs for $GITHUB_REF_NAME and cleanup old branches"
            git push origin gh-pages
          fi
